/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FormPemeriksaan;

import java.awt.Dimension;
import java.awt.HeadlessException;
import static java.lang.Integer.parseInt;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.JOptionPane;
import Koneksi.Koneksi;

/**
 *
 * @author karno
 */
public class Pemeriksaan extends javax.swing.JInternalFrame {
    
    ArrayList idSpesialis = new ArrayList();
    ArrayList idDokter = new ArrayList();
    String tanggal;
    
    private void reset(){
        txtid.setEditable(false);
        txtidpasien.setText(null);
        txtnamapasien.setText(null);
        cbspesialis.setSelectedIndex(0);
        cbdokter.setSelectedIndex(0);
        tadiagnosa.setText(null);
        dttanggal.setDate(null);
        
        btnsimpan.setEnabled(true);
        btnupdate.setEnabled(false);
        btndelete.setEnabled(false);
        btncaripasien.setEnabled(true);

        kodePemeriksaan();

    }
    
    private void tampilSpesialis(){
        try{
            String sql = "SELECT * FROM spesialis";
            java.sql.Connection conn=(Connection)Koneksi.configDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            
            while(res.next()){
                cbspesialis.addItem(res.getString(2));
                idSpesialis.add(res.getString(1));
            }
            
        }catch (SQLException e) {
            System.out.println("Error : " + e.getMessage());
        }
    }
    
    private void tampilDokter(){
        try{
            String id_spesialis = (String) idSpesialis.get((int)cbspesialis.getSelectedIndex());
            String sql = "SELECT * FROM dokter WHERE id_spesialis='"+id_spesialis+"'";
            java.sql.Connection conn=(Connection)Koneksi.configDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            
            while(res.next()){
                cbdokter.addItem(res.getString(2));
                idDokter.add(res.getString(1));
            }
            
        }catch (SQLException e) {
            System.out.println("Error : " + e.getMessage());
        }
    }
    
    private void kodePemeriksaan(){
        try{
            String sql = "SELECT MAX(right(kode_periksa, 1)) AS kode_periksa FROM pemeriksaan";
            java.sql.Connection conn=(Connection)Koneksi.configDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);

            if(res.next()){
                int kode = res.getInt(1);
                String AN = "" + (kode + 1);
                String Nol = "";
                
                if(AN.length() == 1){
                    Nol = "00";
                }else if(AN.length() == 2){
                    Nol = "0";
                }else if(AN.length() == 3){
                    Nol = "";
                }
                
                txtid.setText("PRS" + Nol + AN);
                
            } else {
                txtid.setText("PRS001");
            }
        } catch (Exception e){
            System.out.print(e);
            JOptionPane.showMessageDialog(null, "Koneksi Gagal");
        }
    }
    /**
     * Creates new form Pemeriksaan
     */
    public Pemeriksaan() {
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI)getUI()).setNorthPane(null);
        idSpesialis.add("0");
        idDokter.add("0");
        tampilSpesialis();
        kodePemeriksaan();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btncari = new javax.swing.JButton();
        btncaripasien = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        txtidpasien = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtnamapasien = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        cbspesialis = new javax.swing.JComboBox<>();
        cbdokter = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tadiagnosa = new javax.swing.JTextArea();
        jLabel26 = new javax.swing.JLabel();
        btnsimpan = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnreset = new javax.swing.JButton();
        btnDataPemeriksaan = new javax.swing.JButton();
        dttanggal = new com.toedter.calendar.JDateChooser();
        Judul = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(820, 483));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btncari.setBackground(new java.awt.Color(255, 255, 255));
        btncari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Aset/Cari.png"))); // NOI18N
        btncari.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btncari.setBorderPainted(false);
        btncari.setContentAreaFilled(false);
        btncari.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btncari.setFocusable(false);
        btncari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncariActionPerformed(evt);
            }
        });
        jPanel1.add(btncari, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 90, 40, 30));

        btncaripasien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Aset/Cari.png"))); // NOI18N
        btncaripasien.setBorderPainted(false);
        btncaripasien.setContentAreaFilled(false);
        btncaripasien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btncaripasien.setFocusable(false);
        btncaripasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncaripasienActionPerformed(evt);
            }
        });
        jPanel1.add(btncaripasien, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 130, 40, 30));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        jLabel15.setText("Kode Pemeriksaan");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, 30));

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        jLabel16.setText("ID Pasien");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, 30));

        txtid.setEditable(false);
        txtid.setBackground(new java.awt.Color(255, 255, 255));
        txtid.setFont(new java.awt.Font("Poppins", 0, 11)); // NOI18N
        txtid.setText("Otomatis");
        txtid.setToolTipText("");
        txtid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidActionPerformed(evt);
            }
        });
        jPanel1.add(txtid, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 218, 30));

        txtidpasien.setEditable(false);
        txtidpasien.setBackground(new java.awt.Color(255, 255, 255));
        txtidpasien.setFont(new java.awt.Font("Poppins", 0, 11)); // NOI18N
        txtidpasien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtidpasien, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 218, 30));

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        jLabel24.setText("Nama Pasien");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, 30));

        txtnamapasien.setEditable(false);
        txtnamapasien.setBackground(new java.awt.Color(255, 255, 255));
        txtnamapasien.setFont(new java.awt.Font("Poppins", 0, 11)); // NOI18N
        txtnamapasien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtnamapasien, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 218, 30));

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        jLabel18.setText("Spesialis");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, -1, 30));

        cbspesialis.setFont(new java.awt.Font("Poppins", 0, 11)); // NOI18N
        cbspesialis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- - Pilih Spesialis - -" }));
        cbspesialis.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cbspesialis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbspesialisActionPerformed(evt);
            }
        });
        jPanel1.add(cbspesialis, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, 218, 30));

        cbdokter.setFont(new java.awt.Font("Poppins", 0, 11)); // NOI18N
        cbdokter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- - Pilih Dokter - -" }));
        cbdokter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cbdokter.setOpaque(false);
        cbdokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbdokterActionPerformed(evt);
            }
        });
        jPanel1.add(cbdokter, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, 218, 30));

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        jLabel21.setText("Dokter");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, -1, 30));

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        jLabel25.setText("Diagnosa");
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, 30));

        tadiagnosa.setColumns(20);
        tadiagnosa.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        tadiagnosa.setRows(5);
        tadiagnosa.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 4, 0, new java.awt.Color(0, 255, 0)));
        jScrollPane1.setViewportView(tadiagnosa);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 290, 218, 80));

        jLabel26.setBackground(new java.awt.Color(255, 255, 255));
        jLabel26.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        jLabel26.setText("Tanggal Periksa");
        jPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, -1, 30));

        btnsimpan.setFont(new java.awt.Font("Poppins Medium", 0, 11)); // NOI18N
        btnsimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Aset/Simpan.png"))); // NOI18N
        btnsimpan.setText(" Simpan");
        btnsimpan.setFocusable(false);
        btnsimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsimpanActionPerformed(evt);
            }
        });
        jPanel1.add(btnsimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 90, 110, 40));

        btnupdate.setFont(new java.awt.Font("Poppins Medium", 0, 11)); // NOI18N
        btnupdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Aset/Update.png"))); // NOI18N
        btnupdate.setText(" Update");
        btnupdate.setEnabled(false);
        btnupdate.setFocusable(false);
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, 110, 40));

        btndelete.setFont(new java.awt.Font("Poppins Medium", 0, 11)); // NOI18N
        btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Aset/Delete.png"))); // NOI18N
        btndelete.setText(" Delete");
        btndelete.setEnabled(false);
        btndelete.setFocusable(false);
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 140, 110, 40));

        btnreset.setFont(new java.awt.Font("Poppins Medium", 0, 11)); // NOI18N
        btnreset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Aset/Reset.png"))); // NOI18N
        btnreset.setText(" Reset");
        btnreset.setFocusable(false);
        btnreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetActionPerformed(evt);
            }
        });
        jPanel1.add(btnreset, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 90, 110, 40));

        btnDataPemeriksaan.setFont(new java.awt.Font("Poppins Medium", 0, 11)); // NOI18N
        btnDataPemeriksaan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Aset/Data.png"))); // NOI18N
        btnDataPemeriksaan.setText(" Data Pemeriksaan");
        btnDataPemeriksaan.setFocusable(false);
        btnDataPemeriksaan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataPemeriksaanActionPerformed(evt);
            }
        });
        jPanel1.add(btnDataPemeriksaan, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 190, 230, 40));
        jPanel1.add(dttanggal, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, -1, 30));

        Judul.setFont(new java.awt.Font("Poppins SemiBold", 0, 24)); // NOI18N
        Judul.setForeground(new java.awt.Color(31, 69, 113));
        Judul.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Judul.setText("INPUT DATA PEMERIKSAAN");
        Judul.setAlignmentX(0.5F);
        jPanel1.add(Judul, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 820, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btncariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncariActionPerformed
        String kode = JOptionPane.showInputDialog(null, "Cari Berdasarkan Kode Pemeriksaan!!!");
        try{
            String sql = "SELECT * FROM pemeriksaan "
            + "INNER JOIN pasien ON pasien.id_pasien=pemeriksaan.id_pasien "
            + "INNER JOIN dokter ON dokter.id_dokter=pemeriksaan.id_dokter "
            + "INNER JOIN spesialis ON spesialis.id_spesialis=dokter.id_spesialis "
            + "WHERE kode_periksa='"+kode+"'";
            java.sql.Connection conn=(Connection)Koneksi.configDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);

            if(res.next()){
                int id_spesialis = idSpesialis.indexOf(res.getString(18));
                JOptionPane.showMessageDialog(null, "Data ditemukan");
                txtid.setText(res.getString(1));
                txtidpasien.setText(res.getString(7));
                txtnamapasien.setText(res.getString(8));
                cbspesialis.setSelectedIndex(id_spesialis);

                int id_dokter = idDokter.indexOf(res.getString(13));
                cbdokter.setSelectedIndex(id_dokter);

                tadiagnosa.setText(res.getString(4));

                java.util.Date date = new SimpleDateFormat("yyy-MM-dd").parse((String)res.getString(5));
                dttanggal.setDate(date);

                btnsimpan.setEnabled(false);
                btnupdate.setEnabled(true);
                btndelete.setEnabled(true);
                btncaripasien.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(null, "Data Tidak ditemukan");
                reset();
            }
        } catch (Exception e){
            System.out.print(e);
            JOptionPane.showMessageDialog(null, "Koneksi Gagal");
        }
    }//GEN-LAST:event_btncariActionPerformed

    private void btncaripasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncaripasienActionPerformed
        String id = JOptionPane.showInputDialog(null, "Cari Berdasarkan ID Pasien!!!");
        try{
            String sql = "SELECT * FROM pasien WHERE id_pasien='"+id+"'";
            java.sql.Connection conn=(Connection)Koneksi.configDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);

            if(res.next()){
                JOptionPane.showMessageDialog(null, "Data ditemukan");
                txtidpasien.setText(res.getString(1));
                txtnamapasien.setText(res.getString(2));
            } else {
                JOptionPane.showMessageDialog(null, "Data Tidak ditemukan");
                reset();
            }
        } catch (Exception e){
            System.out.print(e);
            JOptionPane.showMessageDialog(null, "Koneksi Gagal");
        }
    }//GEN-LAST:event_btncaripasienActionPerformed

    private void txtidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidActionPerformed

    private void cbspesialisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbspesialisActionPerformed
        cbdokter.removeAllItems();
        cbdokter.addItem("- - Pilih Dokter - -");
        idDokter.clear();
        idDokter.add("0");
        tampilDokter();
    }//GEN-LAST:event_cbspesialisActionPerformed

    private void cbdokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbdokterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbdokterActionPerformed

    private void btnsimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsimpanActionPerformed
        if(txtidpasien.getText().equals("") || txtnamapasien.getText().equals("") || cbspesialis.getSelectedIndex() ==  0 || cbdokter.getSelectedIndex() ==  0 || tadiagnosa.getText().equals("") || dttanggal.getDate().equals("")){
            JOptionPane.showMessageDialog(null, "Form Tidak Boleh Ada Yang Kosong!!!");
        }else{
            try {
                String id_dokter = (String) idDokter.get((int)cbdokter.getSelectedIndex());

                String sql = "INSERT INTO pemeriksaan(kode_periksa, id_pasien, id_dokter, diagnosa, tgl_periksa, tindakan) "
                + "VALUES('"+txtid.getText()+"', '"+txtidpasien.getText()+"', '"+id_dokter+"','"+tadiagnosa.getText()+"','"+tanggal+"')";
                java.sql.Connection conn = (Connection)Koneksi.configDB();
                java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
                pstm.execute();
                JOptionPane.showMessageDialog(null, "Prosess Simpan Data Pemeriksaan Berhasil..");
                reset();
                kodePemeriksaan();

            }catch (HeadlessException | SQLException e){
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_btnsimpanActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        try {

            String id_dokter = (String) idDokter.get((int)cbdokter.getSelectedIndex());

            String sql = "UPDATE pemeriksaan SET id_pasien='"+txtidpasien.getText()+"', id_dokter='"+id_dokter+"', diagnosa='"+tadiagnosa.getText()+"', tgl_periksa='"+tanggal+"' WHERE kode_periksa = '"+txtid.getText()+"'";
            java.sql.Connection conn = (Connection)Koneksi.configDB();
            java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
            pstm.execute();
            JOptionPane.showMessageDialog(null, "Edit Data Pemeriksaan Berhasil...");
            kodePemeriksaan();
        }catch (HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

        reset();
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        int tanya = JOptionPane.showConfirmDialog(null, "Yakin untuk menghapus data ini?","Confirmation", JOptionPane.YES_NO_OPTION);

        if(tanya==0){
            try{
                String sql = "DELETE FROM pemeriksaan WHERE kode_periksa='"+txtid.getText()+"'";
                java.sql.Connection conn = (Connection)Koneksi.configDB();
                java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
                pstm.execute();
                JOptionPane.showMessageDialog(null, "Hapus Data Pemeriksaaan Berhasil....");
            }catch (HeadlessException | SQLException e){
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
            reset();
            kodePemeriksaan();
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetActionPerformed
        reset();
    }//GEN-LAST:event_btnresetActionPerformed

    private void btnDataPemeriksaanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataPemeriksaanActionPerformed
        DataPemeriksaan dataPemeriksaan = new DataPemeriksaan();
        this.getDesktopPane().add(dataPemeriksaan);
        Dimension gs = this.getDesktopPane().getSize();
        Dimension cs = dataPemeriksaan.getSize();

        dataPemeriksaan.setLocation((gs.width - cs.width) / 2, (gs.height - cs.height) / 2);

        dataPemeriksaan.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnDataPemeriksaanActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Judul;
    private javax.swing.JButton btnDataPemeriksaan;
    private javax.swing.JButton btncari;
    private javax.swing.JButton btncaripasien;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnreset;
    private javax.swing.JButton btnsimpan;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox<String> cbdokter;
    private javax.swing.JComboBox<String> cbspesialis;
    private com.toedter.calendar.JDateChooser dttanggal;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea tadiagnosa;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtidpasien;
    private javax.swing.JTextField txtnamapasien;
    // End of variables declaration//GEN-END:variables
}
